from deepspeech import Model
import numpy as np
import wave
from pydub import AudioSegment
import os
class SpeechToText:

        def __init__(self,model_file_path,lm_file_path,beam_width,lm_alpha,lm_beta,file_location):
        self.model_file_path=model_file_path
        self.lm_file_path=lm_file_path
        self.beam_width=beam_width
        self.lm_alpha=lm_alpha
        self.lm_beta=lm_beta
        self.file_location=file_location

        def set_model(self):
            model = Model(self.model_file_path)
            model.enableExternalScorer(self.lm_file_path)
            model.setScorerAlphaBeta(self.lm_alpha, self.lm_beta)
            model.setBeamWidth(self.beam_width)
            return model

        def read_wav_file(self,filename):
            with wave.open(filename, 'rb') as w:
                rate = w.getframerate()
                frames = w.getnframes()
                buffer = w.readframes(frames)
        return buffer, rate

        def transcribe(self,wav_filename):
            model=self.set_model()
            buffer, rate = self.read_wav_file(wav_filename)
            data16 = np.frombuffer(buffer, dtype=np.int16)
            return model.stt(data16)